Data types : int,string, null,undefined, boolean , object

specifier:
          var   -- local and global both
          let  -- scope in block only where declared
          const  -- can't be changed


Remember if some variable is declared inside function with var then it is local variable.
if some variable is declared globally with var then it is global variable.
if some variable is declared inside function without any specifier then it is global variable automatically.
-----------------------------------------------------------------------------------------------------------------------------------

Arithatic operator     + - * / ++ -- %
Logical operator       && || !
Bitwise operator       & | ~ ^ >> << <<<
Comparison            == != < > <= >=
Assignment operator
?:
typeof         -->>  typeof null => object
              --->> other's type of same as their data type
              
----------------------------------------------------------------------------------------------------------------------------------

declare string variables :
                          
                          
                          
escaping(\) literal quotes in strings :
                                var str = "hello\"nandan\""    /// "hello "nandan""
                            
                            
                            
                            
quotinq strings with single quotes :
                                var str = 'hello "nandan" '   /// ' hello "nadan" '
                                
                                
                                

concatenating string with plus operator :
                                              "hello" + "nandan" // "hello nandan"
                                              
                                         
                                          
                                        
                                              
concatenating string with variables :
                                          var str = "hello"
                                          str += "nandan"          
                                          console.log(str)        /// "hello nandan"
                                    
                                    
                                    
                                          
                                          

Bracket in string : var str ="nandan"
                     str[0]    //// n
                     
                     
                     
                     
                     
               
Immutability of strings : var str = "jello nandan"
                          str[0] = "h"                    //// error
                          
                          but we can change whole string
                          str = "hello nandan"           /
                          console(str)               // hello nandan
                          
                          
                          
                          

find a length of string : str.length
                        
                        
                       
                       

store multiple values with arrays :   arr=[1,2,3]
                                       arr[0]         /////  1





modify array data with indexes     arr = [1,2,3]
                                   arr[0] = 5        
                                   arr               //// [5,2,3]
                                   
                                   
                                   
                                   
access multi-dimensional arrays with indexes :
                                              arr =[[1,2,3],[4,5,6]]
                                              arr[0][0]  // 1



push in array        ==>> arr.push()
                :arr=[1,2,3]
                arr.push(4)  //[1,2,3,4]
                
                
                arr2 = [[1,2,3],[4,5,6]]
                arr2.push([7,8,9])  /// [[1,2,3],[4,5,6],[7,8,9]]
                



manipulate arrays with pop() :
                            arr.pop()  
                            

manipulate arrays with shift()  :
                            same as pop but removes from starting
                            
                            
manipulate arrays with unshift() :
                                  same as push but adds at starting
                                  


Local variable gets precedence over global variabe iflocal and global variable is of same name.



comparison with the strict equality operator :(does not comapre after type conversion)
                                                  3 == "3"   /// true
                                                  3==3 // true
                                                  3===3 // true
                                                  3==="3" // false


comparison with strict inequality operator: does not allow type conversion


switch case statement


default option in switch statements


multiple identical options in switch statements :
                                                      switch(1)
                                                      {
                                                      case 1:
                                                      case 2:
                                                            print("hello")
                                                            break;
                                                       case 3:
                                                       case 4:
                                                            print("world")
                                                            break;
                                                       default:
                                                            break;
                                                           }
                                                           
                                                           
       
build javascript objects : 
                                       var dog ={
                                                  'name':'quincy'
                                                  legs:4
                                                  freinds=[]
                                                  };
                                       
                                       
                                       
accessing object properties with dot notation :  
                                                  dog.name  /// quincy
                                                  
                                                  
accessing object properties with bracket notation :
                                                  dog['name']  /// quincy
                                                  
 
updating object properties  :
                                       dog.name = "doggy"
                                       
                                       
add new property to an object :
                                 dog.bark = "woow"
                                 
                                 
delete properties form an object :
                                    delete dog.bark;    
                                        
using objects for lookups : =>> switch statements can be replaced by objects


testing objects for properties :(hasOwnProperty())
                              dog.hasOwnProperty("name")  //// true
                              
                              
manipulating complex objects : list of dicts/objects  -->>similar like json



iterate with while loop
iterate with for loops 


nesting with do..while loops 


generate random fractions :
                              Math.random()    ///(0,1)
                              
                              
generate random whole numbers:
                              Math.floor(Math.random() * 20) /// random int between 0 and 19
                              
                              

use the parseInt function : 
                              parseInt("56")   // 56
                              parseInt("a")    // NAN
                              
use the parseInt function with a radix : (base is defined manually)

                              parseInt("1001",2)   /// 9
                              
                              
use the conditional(ternary) operator 


difference between the var and let and const keywords: 
                                        a) let name = "nandan"
                                           let name = "pandey"    ///redeclaration
                                           
                                           error
                                          
                                       b) let name = "nandan"
                                          name = "pandey" //reassignment
                                          
                                          // ouptuts pandey if name is printed
                                          //(let allows reassignment but not redeclaration)
                                       
                                       c) const does not allow redeclaration and  reassignment  of primitive data types such as boolean, strings(as show in example),int.
                                        
                                          const name = "nandan"
                                          const name = "pandey"    /// error
                                          
                                          
                                          const name="nandan"
                                          name = "pandey"   /// error
                                          
                                          
                                        ---->>>>>>  But we can update else mentioned above
                                          eg. const dict = {}
                                                  dict.firstName = 'nandan'   //// it is right and prints firstName:nandan
                                                  
                                                 
                                      d) var alows both redeclaration as well as reassignment
                                          

compare scopes of the var and let keywords :
                                                 a) let is limited to only that block in which it declared but not  in that block in which it's block is present and so..on i.e. parent block
                                                 
                                                 b) var has scope in block where it has been declared as well as in that block also in which it's block is present and so..on i.e. parent block


declare a read-only variable with the const keyword : common convention is that const variable should be in capitalized form.


mutate an array declared with const :
                                        const s = [1,2,3]
                                        s = [2,1,3]   // error
                                        s[0] = 2
                                        s[1] = 1
                                        s[2] = 3
                                        s             // [2,1,3]
                                        
                                        
prevent object mutation :  
                               Object.freeze()
                               
                               
                               
                               
use arrow function to write concise anonymous functions :(Anonymous function has no name)

                                                 var a = function()
                                                                 {
                                                                    return new date();
                                                                  };
                                                                  
                                                                  
                                                                  
                                                  var a = () => {
                                                                  return new data();
                                                                 };
                                                                 
                                                           
                                                           
                                                   var a = () => new date();
                                                   
                                                 --->> calling the function a()
                                  
                                                                 

write arrow functions with parameters :
                                                 const hello = (val) => "Hello " + val; 
                                                 // if you have only one parameter, you can skip the parentheses as well:
                                                  hello = val => "Hello " + val; 
                                                  
                                                  
                                             -->>> calling function hello("world")

                                        

using REST operator(...)--->> converts all passed paramenters into array----->> and any number of arguments can be passed
                              
                              const sum = (function(){
                                                  return function sum(x,y,z){
                                                                     const args = [x,y,z];
                                                                     return args.reduce((a,b) => a+b,0);
                                                              };
                                                     
                                                     })();
                                                     
                                                     
                                    
                                    
                                calling function:  sum(2,3,4)   /// 9
                                               
                                               
                                       
                                       using rest operator-->>>
                                       
                                       
                                       
                                 const sum = (function(){
                                                  return function sum(...args){
                                                               
                                                                     return args.reduce((a,b) => a+b,0);
                                                              };
                                                     
                                                     })();




                                        calling function : sum(2,3,4)   // 9
                                        
                                        
                                        
                                        
use the spread operator to evaluate arrays In-Place :
                                        const arr1 = ['jan','feb','march']
                                        let arr2;
                                        (function()
                                                  {
                                                            arr2 = arr1;
                                                            arr[1] = 'may'
                                                
                                            })();
                                             print(arr2)     /// ['may','feb','march']
                                             print(arr1)      ////['may','feb','march']
                                             
                                             
                                             
                                        ----------------------------------------------
                                             
                                             
                                       
                                       const arr1 = ['jan','feb','march']
                                        let arr2;
                                        (function()
                                                  {
                                                            arr2 = [...arr1];
                                                            arr[1] = 'may'
                                                
                                            })();
                                             print(arr2)     /// ['jan','feb','march']
                                             print(arr1)      ////['may','feb','march']
                                                           
                                                           
                                                           
                                                           
                                                           
                                                           
                                                           
                                                           
                                                           
                                                           
use destruction in assignment to assign variables from objects :

                                                            var dog ={
                                                                      'name':'quincy'
                                                                      'legs':4
                                                                      freinds=[]
                                                                      };
                                                  
                                                  
                                        old method of assigning values of object to any variable is follows:
                                                               var a =  dog.name
                                                               var b =  dog.legs
                                                               var c =  dog.friends  //// a= quincy,b=4,c=[]
                                                               
                                                  
                                  new destructuring method:
                                               var { 'name': a,'legs' : b, friends:c }  = dog    /// a= quincy,b=4,c=[]
                                     
                                     
                                     
                                     
                                     
destructuring assignment with nested objects :
                                            var dog ={
                                                         'name':'quincy'
                                                         'legs':4
                                                          friends : {'one':'qu' , 'two':'qyy'}
                                                        };      
                                        
                                        
                                        
                                        
                                        var {friends : {'one : a} } = dog
                                        print(a)  /// qu
                                        
                                        
                                        
                                        
                                        
                                        
use destructuring assignment to assign variables from arrays :( starts from beginning , if not want any value skip it's corresponding place)
                              
                                                 const [x,y] = [1,2,3,4,5]
                                                 print(x,y)   /// (1,2)
                                                 
                                                const[x,y, , z] = [1,2,3,4,5]
                                                print(x,y,z)  /// (1,2,4)
                                                
                                                
                                                
                                                
                                                
use destructuring assignment with the rest operator :
                                                  
                                                 const [x,y,..arr] = [1,2,3,4,5]
                                                 print(x,y)   /// (1,2)
                                                 print(arr)   /// [3,4,5]
                                                 
                                                 
                                                const[,,..ar] = [1,2,3,4,5]
                                                print(ar)  /// (3,4,5)
                                                
                                                
                                                
                                                
create string using template literals(variable is interpreted as string inside literal) (variable inside string come up with $):  
                              ` hi! i m nandan and i have dog ${dog.name}'  /// hi i m nandan and i have dog quincy.
                              
                  
write concise object literal : (when variable name is same as key name)

                                                            const createPerson = (name,age,gender) =>{
                                                                                return {
                                                                                             name : name,
                                                                                             age : age,
                                                                                             gender : gender
                                                                                       };
                                                                                  };

                                                               createPerson("nandan", "22", "male");


                                                               ---------------------------------
                                                        new form:       
                                                              const createPerson = (name,age,gender) =>( {  name, age, gender  }) ; 

                                                  //// returns object as above

                                                         
                                        
                                                                         
use class syntax to define a constructor function :
                                                  const createPerson = {
                                                                       age:2,
                                                                       setage : function(newage){
                                                                                          this.age = newage;
                                                                                }
                                                                                      
                                                                         };
                                                                         
                                                                         
                                                                         
                                                                         
                                                                 
                                                    calling function : createPerson.setage(5) /// prints createPerson.age =2
                                                    
                                                    
                                                    
                                                    
                                                    
                                              ------------------------------
                                              new way:
                                                            
                                                            const createPerson = {
                                                                       age:2,
                                                                       setage(newage){
                                                                                          this.age = newage;
                                                                                }
                                                                                      
                                                                         };
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
Class and functon object:

                                                  
                                                            var createPerson = function(name) =>{
                                                                                
                                                                                             this.name = name;
                                                                                            
                                                                                          }
                                                                                  
                                                                         
                                                                         
                                                              var objectt = new createPerson("nandan")
                                                                                              print(objectt.name)  // nandan
                                                                                  
                                                                                  
                                                                                  
                                   ---------------------------------------------------------
                                   
                                   
                                   
                                   
                                                            class createPerson{
                                                                                
                                                                                constructor(name){
                                                                                             this.name = name;
                                                                                            
                                                                                          }
                                                                                  
                                                                         }
                                                                         
                                                              var objectt = new createPerson("nandan")
                                                                                              print(objectt.name)  // nandan
                 
                 
                 
             
             
             
class inside function :
                          
                 
use getters and setters to control access to an object :



import and export : 
                                        file1.js 
                                                    var createPerson = function(name) =>{

                                                                                  this.name = name;
                                                                                    } 


                                                    export var age = 12;  //// method of exporting variable
                                                    export {createPerson};  //// method of exporting function


                                        file2.js

                                                  import {createPerson} from "./file1"      ///// where ./ means current directory



                    
                    
                    
                    
                    
                    
                    
                    
                    
use * to import everything from a file :
                              import * as somename from filename_with_path
                              
                              
                              
                              
                                         
create an export fallback with export default:
                              export default function subtract(x,y) {return x-y;}
                        
                        
                        
import a default export :(default export is importes without curly braces)
                              import subract from filepath





